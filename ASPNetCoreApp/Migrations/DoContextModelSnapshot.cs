// <auto-generated />
using ASPNetCoreApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPNetCoreApp.Migrations
{
    [DbContext(typeof(DoContext))]
    partial class DoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPNetCoreApp.Models.Do", b =>
                {
                    b.Property<int>("DoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("DoId");

                    b.ToTable("Do");
                });

            modelBuilder.Entity("ASPNetCoreApp.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("DoId");

                    b.Property<string>("Title");

                    b.HasKey("TaskId");

                    b.HasIndex("DoId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("ASPNetCoreApp.Models.Task", b =>
                {
                    b.HasOne("ASPNetCoreApp.Models.Do", "Do")
                        .WithMany("Task")
                        .HasForeignKey("DoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
